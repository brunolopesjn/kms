<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="71862cf7-4a81-4430-b0b3-9d6680b9ab8a" name="Changes" comment=":wrench: chore: Resolvendo merge">
      <change afterPath="$PROJECT_DIR$/src/main/kotlin/br/dev/profbrunolopes/common/exceptions/DuplicateRecordException.kt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/kotlin/br/dev/profbrunolopes/domain/account/Account.kt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/kotlin/br/dev/profbrunolopes/domain/account/AccountController.kt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/kotlin/br/dev/profbrunolopes/domain/account/AccountRepository.kt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/kotlin/br/dev/profbrunolopes/domain/account/AccountService.kt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/kotlin/br/dev/profbrunolopes/domain/account/Role.kt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/kotlin/br/dev/profbrunolopes/domain/account/dto/AccountRequestDTO.kt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/kotlin/br/dev/profbrunolopes/domain/account/dto/AccountResponseDTO.kt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/resources/db/migration/V1__create-accounts-schema.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/kotlin/br/dev/profbrunolopes/service/AccountServiceTest.kt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/resources/application-test.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build.gradle.kts" beforeDir="false" afterPath="$PROJECT_DIR$/build.gradle.kts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/kotlin/br/dev/profbrunolopes/HelloControllerTest.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/kotlin/br/dev/profbrunolopes/controller/HelloControllerTest.kt" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="kms" type="f1a62948:ProjectNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Kotlin File" />
        <option value="Kotlin Object" />
        <option value="Kotlin Data Class" />
        <option value="Kotlin Interface" />
        <option value="Kotlin Class" />
        <option value="Kotlin Enum" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2Zx8cNHUfXIDaED5Eb5WJNVKnPZ" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "Gradle.AccountServiceTest (1).executor": "Run",
    "Gradle.AccountServiceTest.executor": "Run",
    "Gradle.Build kms.executor": "Run",
    "Gradle.HelloControllerTest.executor": "Run",
    "Kotest.AccountServiceTest: Given: Dado o serviço AccountService.executor": "Run",
    "Kotest.AccountServiceTest: When: Quando o método createAccount for executado com uma instância válida de Account mas com o username já cadastrado.executor": "Run",
    "Kotlin.ApplicationKt.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "git-widget-placeholder": "main",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "/home/bruno/Workspaces/KOTLIN/kms/src/test/resources",
    "project.structure.last.edited": "SDKs",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/test/resources" />
    </key>
    <key name="CreateKotlinClassDialog.RecentsKey">
      <recent name="br.dev.profbrunolopes.domain.account" />
    </key>
    <key name="MoveKotlinTopLevelDeclarationsDialog.RECENTS_KEY">
      <recent name="br.dev.profbrunolopes.domain.account" />
      <recent name="br.dev.profbrunolopes.domain.account.service" />
      <recent name="br.dev.profbrunolopes.domain.account.repository" />
      <recent name="br.dev.profbrunolopes.domain.account.controller" />
      <recent name="br.dev.profbrunolopes.domain.account.model" />
    </key>
  </component>
  <component name="RunManager" selected="Kotlin.ApplicationKt">
    <configuration name="AccountServiceTest (1)" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;br.dev.profbrunolopes.service.AccountServiceTest&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="ApplicationKt" type="JetRunConfigurationType" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="br.dev.profbrunolopes.ApplicationKt" />
      <module name="kms.main" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="AccountServiceTest: Given: Dado o serviço AccountService" type="ioKotest" factoryName="Kotest" temporary="true" defaultName="singleModule">
      <module name="kms.test" />
      <option name="jrePath" value="" />
      <option name="jrePathEnabled" value="false" />
      <option name="passParentEnvs" value="true" />
      <option name="workingDirectory" value="$MODULE_WORKING_DIR$" />
      <option name="programParameters" value="" />
      <option name="specName" value="br.dev.profbrunolopes.service.AccountServiceTest" />
      <option name="testPath" value="Dado o serviço AccountService" />
      <option name="packageName" value="" />
      <option name="vmparams" value="" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="AccountServiceTest: When: Quando o método createAccount for executado com uma instância válida de Account mas com o username já cadastrado" type="ioKotest" factoryName="Kotest" temporary="true" defaultName="singleModule">
      <module name="kms.test" />
      <option name="jrePath" value="" />
      <option name="jrePathEnabled" value="false" />
      <option name="passParentEnvs" value="true" />
      <option name="workingDirectory" value="$MODULE_WORKING_DIR$" />
      <option name="programParameters" value="" />
      <option name="specName" value="br.dev.profbrunolopes.service.AccountServiceTest" />
      <option name="testPath" value="Dado o serviço AccountService -- Quando o método createAccount for executado com uma instância válida de Account mas com o username já cadastrado" />
      <option name="packageName" value="" />
      <option name="vmparams" value="" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Kotlin.ApplicationKt" />
        <item itemvalue="Kotest.AccountServiceTest: Given: Dado o serviço AccountService" />
        <item itemvalue="Gradle.AccountServiceTest (1)" />
        <item itemvalue="Kotest.AccountServiceTest: When: Quando o método createAccount for executado com uma instância válida de Account mas com o username já cadastrado" />
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="71862cf7-4a81-4430-b0b3-9d6680b9ab8a" name="Changes" comment="" />
      <created>1703352449678</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1703352449678</updated>
    </task>
    <task id="LOCAL-00001" summary=":wrench: chore: Configurando o Micronaut no projeto">
      <option name="closed" value="true" />
      <created>1703381381255</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1703381381255</updated>
    </task>
    <task id="LOCAL-00002" summary=":wrench: chore: Configurando o Micronaut Kotest no projeto">
      <option name="closed" value="true" />
      <created>1703381557558</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1703381557558</updated>
    </task>
    <task id="LOCAL-00003" summary=":sparkles: feat: Configurado o Micronaut Data JDBC e Flyway sobre o PostgreSQL">
      <option name="closed" value="true" />
      <created>1703408812138</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1703408812138</updated>
    </task>
    <task id="LOCAL-00004" summary=":wrench: chore: Resolvendo merge">
      <option name="closed" value="true" />
      <created>1703408885380</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1703408885380</updated>
    </task>
    <option name="localTasksCounter" value="5" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value=":wrench: chore: Configurando o Micronaut no projeto" />
    <MESSAGE value=":wrench: chore: Configurando o Micronaut Kotest no projeto" />
    <MESSAGE value=":sparkles: feat: Configurado o Micronaut Data JDBC e Flyway sobre o PostgreSQL" />
    <MESSAGE value=":wrench: chore: Resolvendo merge" />
    <option name="LAST_COMMIT_MESSAGE" value=":wrench: chore: Resolvendo merge" />
  </component>
</project>